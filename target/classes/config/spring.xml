<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--#注：主容器中不扫描@Controller注解，因为@Controller将会在SpringMVC扫描-->
    <context:component-scan base-package="work.com.kaixuan" />
    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven />
     <!--引入jdbc 配置文件-->
    <context:property-placeholder location="classpath:config/jdbc.properties" />

    <!-- 配置数据源  线程池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close" >
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <property name="maxActive" value="${maxActive}" />
        <property name="maxIdle" value="${maxIdle}" />
        <property name="minIdle" value="${minIdle}" />
        <property name="maxWait" value="${maxWait}" />
    </bean>


    <!-- 配置sqlSessionFactory，SqlSessionFactoryBean是用来产生sqlSessionFactory的 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <!--  加载mybatis的全局配置文件，放在classpath下的mybatis文件夹中 -->
        <!--<property name="configLocation" value="classpath:mybatis.xml" />-->
       <!--  加载数据源，使用上面配置好的数据源-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--根据mapper接口生成的代理对象  MapperFactoryBean  单个 注入   MapperScannerConfigurer 批量注入-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="work.com.kaixuan"/>
        <!--<property name="sqlSessionFactory" ref="sqlSessionFactory"  /> 不用实现注入  否则会失效-->
      </bean>

</beans>